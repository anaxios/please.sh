#!/usr/bin/env bash

set -eu
set -o pipefail
ARGS=("${@:-}")

run() {

    local firstArg="${1:-}"
    local commandsDir="please-commands"
    local fullCommandPath="$(baseDir)/$commandsDir/$firstArg"
    local command=displayHelp
    
    if [[ $firstArg == "list" ]]; then
	listCommands
	exit 0
    fi
    
    if [[ "$firstArg" == -* ]] || [[ -z "$firstArg" ]]; then
	displayHelp
	exit 0
    fi
    
    if $(hasFlag --help -h); then
	displayHelp
	exit 0
    fi
    
    if [[ -f "$fullCommandPath" ]]; then
	source "$fullCommandPath"
        command="${firstArg}_run"
    fi


    eval $command
    
}

displayHelp() {
cat - <<EOT

Please.sh is a polite way to organize and run your shell scripts.

	  Usage: syndesis [ command ] [... options ...]


To list all available commands located in the 'please-commands' directory:

   	  please list
	
EOT
} 

listCommands() {
    for command in $(ls $(baseDir)/please-commands/); do
	[[ -f $(baseDir)/please-commands/$command ]] && echo $command
    done
}

baseDir() {

    local script="${BASH_SOURCE[0]}"
    
    if [ -L $script ]; then
        if readlink -f $script >/dev/null 2>&1; then
            script=$(readlink -f $script)
        elif readlink $script >/dev/null 2>&1; then
            script=$(readlink $script)
        elif realpath $script >/dev/null 2>&1; then
            script=$(realpath $script)
        else
            echo "ERROR: Cannot resolve symbolic link $script"
            exit 1
        fi
    fi

    local dir=$(dirname "$script")
    local full_dir=$(cd "${dir}" && pwd)
    echo ${full_dir}

}


source "$(baseDir)"/please-commands/utils/flags-opts-helper

run "$ARGS"

